server.port: 8081

spring:
  application:
    name: threat-service
  datasource:
    url: jdbc:postgresql://localhost:5432/threat-db
    username: user
    password: password
  jpa:
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  liquibase:
    change-log: liquibase/liquibase-changeLog.xml
  kafka:
    bootstrap-servers: kafka:29092
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        request.timeout.ms: 60000
        session.timeout.ms: 60000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  jmx:
    enabled: false

message:
  topic:
    name: threats-topic

user-service:
  url: http://user-service:8080/api/v1/
server:
  error:
    include-message: always
